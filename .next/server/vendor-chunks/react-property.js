/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/react-property";
exports.ids = ["vendor-chunks/react-property"];
exports.modules = {

/***/ "(ssr)/./node_modules/react-property/lib/index.js":
/*!**************************************************!*\
  !*** ./node_modules/react-property/lib/index.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nfunction _slicedToArray(arr, i) {\n    return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\nfunction _arrayWithHoles(arr) {\n    if (Array.isArray(arr)) return arr;\n}\nfunction _iterableToArrayLimit(arr, i) {\n    var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n    if (_i == null) return;\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _s, _e;\n    try {\n        for(_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true){\n            _arr.push(_s.value);\n            if (i && _arr.length === i) break;\n        }\n    } catch (err) {\n        _d = true;\n        _e = err;\n    } finally{\n        try {\n            if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n        } finally{\n            if (_d) throw _e;\n        }\n    }\n    return _arr;\n}\nfunction _unsupportedIterableToArray(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(o);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\nfunction _arrayLikeToArray(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _nonIterableRest() {\n    throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n// A reserved attribute.\n// It is handled by React separately and shouldn't be written to the DOM.\nvar RESERVED = 0; // A simple string attribute.\n// Attributes that aren't in the filter are presumed to have this type.\nvar STRING = 1; // A string attribute that accepts booleans in React. In HTML, these are called\n// \"enumerated\" attributes with \"true\" and \"false\" as possible values.\n// When true, it should be set to a \"true\" string.\n// When false, it should be set to a \"false\" string.\nvar BOOLEANISH_STRING = 2; // A real boolean attribute.\n// When true, it should be present (set either to an empty string or its name).\n// When false, it should be omitted.\nvar BOOLEAN = 3; // An attribute that can be used as a flag as well as with a value.\n// When true, it should be present (set either to an empty string or its name).\n// When false, it should be omitted.\n// For any other value, should be present with that value.\nvar OVERLOADED_BOOLEAN = 4; // An attribute that must be numeric or parse as a numeric.\n// When falsy, it should be removed.\nvar NUMERIC = 5; // An attribute that must be positive numeric or parse as a positive numeric.\n// When falsy, it should be removed.\nvar POSITIVE_NUMERIC = 6;\nfunction getPropertyInfo(name) {\n    return properties.hasOwnProperty(name) ? properties[name] : null;\n}\nfunction PropertyInfoRecord(name, type, mustUseProperty, attributeName, attributeNamespace, sanitizeURL, removeEmptyString) {\n    this.acceptsBooleans = type === BOOLEANISH_STRING || type === BOOLEAN || type === OVERLOADED_BOOLEAN;\n    this.attributeName = attributeName;\n    this.attributeNamespace = attributeNamespace;\n    this.mustUseProperty = mustUseProperty;\n    this.propertyName = name;\n    this.type = type;\n    this.sanitizeURL = sanitizeURL;\n    this.removeEmptyString = removeEmptyString;\n} // When adding attributes to this list, be sure to also add them to\n// the `possibleStandardNames` module to ensure casing and incorrect\n// name warnings.\nvar properties = {}; // These props are reserved by React. They shouldn't be written to the DOM.\nvar reservedProps = [\n    \"children\",\n    \"dangerouslySetInnerHTML\",\n    // elements (not just inputs). Now that ReactDOMInput assigns to the\n    // defaultValue property -- do we need this?\n    \"defaultValue\",\n    \"defaultChecked\",\n    \"innerHTML\",\n    \"suppressContentEditableWarning\",\n    \"suppressHydrationWarning\",\n    \"style\"\n];\nreservedProps.forEach(function(name) {\n    properties[name] = new PropertyInfoRecord(name, RESERVED, false, name, null, false, false);\n}); // A few React string attributes have a different name.\n// This is a mapping from React prop names to the attribute names.\n[\n    [\n        \"acceptCharset\",\n        \"accept-charset\"\n    ],\n    [\n        \"className\",\n        \"class\"\n    ],\n    [\n        \"htmlFor\",\n        \"for\"\n    ],\n    [\n        \"httpEquiv\",\n        \"http-equiv\"\n    ]\n].forEach(function(_ref) {\n    var _ref2 = _slicedToArray(_ref, 2), name = _ref2[0], attributeName = _ref2[1];\n    properties[name] = new PropertyInfoRecord(name, STRING, false, attributeName, null, false, false);\n}); // These are \"enumerated\" HTML attributes that accept \"true\" and \"false\".\n// In React, we let users pass `true` and `false` even though technically\n// these aren't boolean attributes (they are coerced to strings).\n[\n    \"contentEditable\",\n    \"draggable\",\n    \"spellCheck\",\n    \"value\"\n].forEach(function(name) {\n    properties[name] = new PropertyInfoRecord(name, BOOLEANISH_STRING, false, name.toLowerCase(), null, false, false);\n}); // These are \"enumerated\" SVG attributes that accept \"true\" and \"false\".\n// In React, we let users pass `true` and `false` even though technically\n// these aren't boolean attributes (they are coerced to strings).\n// Since these are SVG attributes, their attribute names are case-sensitive.\n[\n    \"autoReverse\",\n    \"externalResourcesRequired\",\n    \"focusable\",\n    \"preserveAlpha\"\n].forEach(function(name) {\n    properties[name] = new PropertyInfoRecord(name, BOOLEANISH_STRING, false, name, null, false, false);\n}); // These are HTML boolean attributes.\n[\n    \"allowFullScreen\",\n    \"async\",\n    // on the client side because the browsers are inconsistent. Instead we call focus().\n    \"autoFocus\",\n    \"autoPlay\",\n    \"controls\",\n    \"default\",\n    \"defer\",\n    \"disabled\",\n    \"disablePictureInPicture\",\n    \"disableRemotePlayback\",\n    \"formNoValidate\",\n    \"hidden\",\n    \"loop\",\n    \"noModule\",\n    \"noValidate\",\n    \"open\",\n    \"playsInline\",\n    \"readOnly\",\n    \"required\",\n    \"reversed\",\n    \"scoped\",\n    \"seamless\",\n    \"itemScope\"\n].forEach(function(name) {\n    properties[name] = new PropertyInfoRecord(name, BOOLEAN, false, name.toLowerCase(), null, false, false);\n}); // These are the few React props that we set as DOM properties\n// rather than attributes. These are all booleans.\n[\n    \"checked\",\n    // disabled with `removeAttribute`. We have special logic for handling this.\n    \"multiple\",\n    \"muted\",\n    \"selected\" // NOTE: if you add a camelCased prop to this list,\n].forEach(function(name) {\n    properties[name] = new PropertyInfoRecord(name, BOOLEAN, true, name, null, false, false);\n}); // These are HTML attributes that are \"overloaded booleans\": they behave like\n// booleans, but can also accept a string value.\n[\n    \"capture\",\n    \"download\" // NOTE: if you add a camelCased prop to this list,\n].forEach(function(name) {\n    properties[name] = new PropertyInfoRecord(name, OVERLOADED_BOOLEAN, false, name, null, false, false);\n}); // These are HTML attributes that must be positive numbers.\n[\n    \"cols\",\n    \"rows\",\n    \"size\",\n    \"span\" // NOTE: if you add a camelCased prop to this list,\n].forEach(function(name) {\n    properties[name] = new PropertyInfoRecord(name, POSITIVE_NUMERIC, false, name, null, false, false);\n}); // These are HTML attributes that must be numbers.\n[\n    \"rowSpan\",\n    \"start\"\n].forEach(function(name) {\n    properties[name] = new PropertyInfoRecord(name, NUMERIC, false, name.toLowerCase(), null, false, false);\n});\nvar CAMELIZE = /[\\-\\:]([a-z])/g;\nvar capitalize = function capitalize(token) {\n    return token[1].toUpperCase();\n}; // This is a list of all SVG attributes that need special casing, namespacing,\n// or boolean value assignment. Regular attributes that just accept strings\n// and have the same names are omitted, just like in the HTML attribute filter.\n// Some of these attributes can be hard to find. This list was created by\n// scraping the MDN documentation.\n[\n    \"accent-height\",\n    \"alignment-baseline\",\n    \"arabic-form\",\n    \"baseline-shift\",\n    \"cap-height\",\n    \"clip-path\",\n    \"clip-rule\",\n    \"color-interpolation\",\n    \"color-interpolation-filters\",\n    \"color-profile\",\n    \"color-rendering\",\n    \"dominant-baseline\",\n    \"enable-background\",\n    \"fill-opacity\",\n    \"fill-rule\",\n    \"flood-color\",\n    \"flood-opacity\",\n    \"font-family\",\n    \"font-size\",\n    \"font-size-adjust\",\n    \"font-stretch\",\n    \"font-style\",\n    \"font-variant\",\n    \"font-weight\",\n    \"glyph-name\",\n    \"glyph-orientation-horizontal\",\n    \"glyph-orientation-vertical\",\n    \"horiz-adv-x\",\n    \"horiz-origin-x\",\n    \"image-rendering\",\n    \"letter-spacing\",\n    \"lighting-color\",\n    \"marker-end\",\n    \"marker-mid\",\n    \"marker-start\",\n    \"overline-position\",\n    \"overline-thickness\",\n    \"paint-order\",\n    \"panose-1\",\n    \"pointer-events\",\n    \"rendering-intent\",\n    \"shape-rendering\",\n    \"stop-color\",\n    \"stop-opacity\",\n    \"strikethrough-position\",\n    \"strikethrough-thickness\",\n    \"stroke-dasharray\",\n    \"stroke-dashoffset\",\n    \"stroke-linecap\",\n    \"stroke-linejoin\",\n    \"stroke-miterlimit\",\n    \"stroke-opacity\",\n    \"stroke-width\",\n    \"text-anchor\",\n    \"text-decoration\",\n    \"text-rendering\",\n    \"underline-position\",\n    \"underline-thickness\",\n    \"unicode-bidi\",\n    \"unicode-range\",\n    \"units-per-em\",\n    \"v-alphabetic\",\n    \"v-hanging\",\n    \"v-ideographic\",\n    \"v-mathematical\",\n    \"vector-effect\",\n    \"vert-adv-y\",\n    \"vert-origin-x\",\n    \"vert-origin-y\",\n    \"word-spacing\",\n    \"writing-mode\",\n    \"xmlns:xlink\",\n    \"x-height\" // NOTE: if you add a camelCased prop to this list,\n].forEach(function(attributeName) {\n    var name = attributeName.replace(CAMELIZE, capitalize);\n    properties[name] = new PropertyInfoRecord(name, STRING, false, attributeName, null, false, false);\n}); // String SVG attributes with the xlink namespace.\n[\n    \"xlink:actuate\",\n    \"xlink:arcrole\",\n    \"xlink:role\",\n    \"xlink:show\",\n    \"xlink:title\",\n    \"xlink:type\" // NOTE: if you add a camelCased prop to this list,\n].forEach(function(attributeName) {\n    var name = attributeName.replace(CAMELIZE, capitalize);\n    properties[name] = new PropertyInfoRecord(name, STRING, false, attributeName, \"http://www.w3.org/1999/xlink\", false, false);\n}); // String SVG attributes with the xml namespace.\n[\n    \"xml:base\",\n    \"xml:lang\",\n    \"xml:space\" // NOTE: if you add a camelCased prop to this list,\n].forEach(function(attributeName) {\n    var name = attributeName.replace(CAMELIZE, capitalize);\n    properties[name] = new PropertyInfoRecord(name, STRING, false, attributeName, \"http://www.w3.org/XML/1998/namespace\", false, false);\n}); // These attribute exists both in HTML and SVG.\n// The attribute name is case-sensitive in SVG so we can't just use\n// the React name like we do for attributes that exist only in HTML.\n[\n    \"tabIndex\",\n    \"crossOrigin\"\n].forEach(function(attributeName) {\n    properties[attributeName] = new PropertyInfoRecord(attributeName, STRING, false, attributeName.toLowerCase(), null, false, false);\n}); // These attributes accept URLs. These must not allow javascript: URLS.\n// These will also need to accept Trusted Types object in the future.\nvar xlinkHref = \"xlinkHref\";\nproperties[xlinkHref] = new PropertyInfoRecord(\"xlinkHref\", STRING, false, \"xlink:href\", \"http://www.w3.org/1999/xlink\", true, false);\n[\n    \"src\",\n    \"href\",\n    \"action\",\n    \"formAction\"\n].forEach(function(attributeName) {\n    properties[attributeName] = new PropertyInfoRecord(attributeName, STRING, false, attributeName.toLowerCase(), null, true, true);\n});\nvar _require = __webpack_require__(/*! ../lib/possibleStandardNamesOptimized */ \"(ssr)/./node_modules/react-property/lib/possibleStandardNamesOptimized.js\"), CAMELCASE = _require.CAMELCASE, SAME = _require.SAME, possibleStandardNamesOptimized = _require.possibleStandardNames;\nvar ATTRIBUTE_NAME_START_CHAR = \":A-Z_a-z\\\\u00C0-\\\\u00D6\\\\u00D8-\\\\u00F6\\\\u00F8-\\\\u02FF\\\\u0370-\\\\u037D\\\\u037F-\\\\u1FFF\\\\u200C-\\\\u200D\\\\u2070-\\\\u218F\\\\u2C00-\\\\u2FEF\\\\u3001-\\\\uD7FF\\\\uF900-\\\\uFDCF\\\\uFDF0-\\\\uFFFD\";\nvar ATTRIBUTE_NAME_CHAR = ATTRIBUTE_NAME_START_CHAR + \"\\\\-.0-9\\\\u00B7\\\\u0300-\\\\u036F\\\\u203F-\\\\u2040\";\n/**\n * Checks whether a property name is a custom attribute.\n *\n * @see {@link https://github.com/facebook/react/blob/15-stable/src/renderers/dom/shared/HTMLDOMPropertyConfig.js#L23-L25}\n *\n * @param {string}\n * @return {boolean}\n */ var isCustomAttribute = RegExp.prototype.test.bind(new RegExp(\"^(data|aria)-[\" + ATTRIBUTE_NAME_CHAR + \"]*$\"));\nvar possibleStandardNames = Object.keys(possibleStandardNamesOptimized).reduce(function(accumulator, standardName) {\n    var propName = possibleStandardNamesOptimized[standardName];\n    if (propName === SAME) {\n        accumulator[standardName] = standardName;\n    } else if (propName === CAMELCASE) {\n        accumulator[standardName.toLowerCase()] = standardName;\n    } else {\n        accumulator[standardName] = propName;\n    }\n    return accumulator;\n}, {});\nexports.BOOLEAN = BOOLEAN;\nexports.BOOLEANISH_STRING = BOOLEANISH_STRING;\nexports.NUMERIC = NUMERIC;\nexports.OVERLOADED_BOOLEAN = OVERLOADED_BOOLEAN;\nexports.POSITIVE_NUMERIC = POSITIVE_NUMERIC;\nexports.RESERVED = RESERVED;\nexports.STRING = STRING;\nexports.getPropertyInfo = getPropertyInfo;\nexports.isCustomAttribute = isCustomAttribute;\nexports.possibleStandardNames = possibleStandardNames;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/react-property/lib/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/react-property/lib/possibleStandardNamesOptimized.js":
/*!***************************************************************************!*\
  !*** ./node_modules/react-property/lib/possibleStandardNamesOptimized.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("// An attribute in which the DOM/SVG standard name is the same as the React prop name (e.g., 'accept').\nvar SAME = 0;\nexports.SAME = SAME;\n// An attribute in which the React prop name is the camelcased version of the DOM/SVG standard name (e.g., 'acceptCharset').\nvar CAMELCASE = 1;\nexports.CAMELCASE = CAMELCASE;\nexports.possibleStandardNames = {\n    accept: 0,\n    acceptCharset: 1,\n    \"accept-charset\": \"acceptCharset\",\n    accessKey: 1,\n    action: 0,\n    allowFullScreen: 1,\n    alt: 0,\n    as: 0,\n    async: 0,\n    autoCapitalize: 1,\n    autoComplete: 1,\n    autoCorrect: 1,\n    autoFocus: 1,\n    autoPlay: 1,\n    autoSave: 1,\n    capture: 0,\n    cellPadding: 1,\n    cellSpacing: 1,\n    challenge: 0,\n    charSet: 1,\n    checked: 0,\n    children: 0,\n    cite: 0,\n    class: \"className\",\n    classID: 1,\n    className: 1,\n    cols: 0,\n    colSpan: 1,\n    content: 0,\n    contentEditable: 1,\n    contextMenu: 1,\n    controls: 0,\n    controlsList: 1,\n    coords: 0,\n    crossOrigin: 1,\n    dangerouslySetInnerHTML: 1,\n    data: 0,\n    dateTime: 1,\n    default: 0,\n    defaultChecked: 1,\n    defaultValue: 1,\n    defer: 0,\n    dir: 0,\n    disabled: 0,\n    disablePictureInPicture: 1,\n    disableRemotePlayback: 1,\n    download: 0,\n    draggable: 0,\n    encType: 1,\n    enterKeyHint: 1,\n    for: \"htmlFor\",\n    form: 0,\n    formMethod: 1,\n    formAction: 1,\n    formEncType: 1,\n    formNoValidate: 1,\n    formTarget: 1,\n    frameBorder: 1,\n    headers: 0,\n    height: 0,\n    hidden: 0,\n    high: 0,\n    href: 0,\n    hrefLang: 1,\n    htmlFor: 1,\n    httpEquiv: 1,\n    \"http-equiv\": \"httpEquiv\",\n    icon: 0,\n    id: 0,\n    innerHTML: 1,\n    inputMode: 1,\n    integrity: 0,\n    is: 0,\n    itemID: 1,\n    itemProp: 1,\n    itemRef: 1,\n    itemScope: 1,\n    itemType: 1,\n    keyParams: 1,\n    keyType: 1,\n    kind: 0,\n    label: 0,\n    lang: 0,\n    list: 0,\n    loop: 0,\n    low: 0,\n    manifest: 0,\n    marginWidth: 1,\n    marginHeight: 1,\n    max: 0,\n    maxLength: 1,\n    media: 0,\n    mediaGroup: 1,\n    method: 0,\n    min: 0,\n    minLength: 1,\n    multiple: 0,\n    muted: 0,\n    name: 0,\n    noModule: 1,\n    nonce: 0,\n    noValidate: 1,\n    open: 0,\n    optimum: 0,\n    pattern: 0,\n    placeholder: 0,\n    playsInline: 1,\n    poster: 0,\n    preload: 0,\n    profile: 0,\n    radioGroup: 1,\n    readOnly: 1,\n    referrerPolicy: 1,\n    rel: 0,\n    required: 0,\n    reversed: 0,\n    role: 0,\n    rows: 0,\n    rowSpan: 1,\n    sandbox: 0,\n    scope: 0,\n    scoped: 0,\n    scrolling: 0,\n    seamless: 0,\n    selected: 0,\n    shape: 0,\n    size: 0,\n    sizes: 0,\n    span: 0,\n    spellCheck: 1,\n    src: 0,\n    srcDoc: 1,\n    srcLang: 1,\n    srcSet: 1,\n    start: 0,\n    step: 0,\n    style: 0,\n    summary: 0,\n    tabIndex: 1,\n    target: 0,\n    title: 0,\n    type: 0,\n    useMap: 1,\n    value: 0,\n    width: 0,\n    wmode: 0,\n    wrap: 0,\n    about: 0,\n    accentHeight: 1,\n    \"accent-height\": \"accentHeight\",\n    accumulate: 0,\n    additive: 0,\n    alignmentBaseline: 1,\n    \"alignment-baseline\": \"alignmentBaseline\",\n    allowReorder: 1,\n    alphabetic: 0,\n    amplitude: 0,\n    arabicForm: 1,\n    \"arabic-form\": \"arabicForm\",\n    ascent: 0,\n    attributeName: 1,\n    attributeType: 1,\n    autoReverse: 1,\n    azimuth: 0,\n    baseFrequency: 1,\n    baselineShift: 1,\n    \"baseline-shift\": \"baselineShift\",\n    baseProfile: 1,\n    bbox: 0,\n    begin: 0,\n    bias: 0,\n    by: 0,\n    calcMode: 1,\n    capHeight: 1,\n    \"cap-height\": \"capHeight\",\n    clip: 0,\n    clipPath: 1,\n    \"clip-path\": \"clipPath\",\n    clipPathUnits: 1,\n    clipRule: 1,\n    \"clip-rule\": \"clipRule\",\n    color: 0,\n    colorInterpolation: 1,\n    \"color-interpolation\": \"colorInterpolation\",\n    colorInterpolationFilters: 1,\n    \"color-interpolation-filters\": \"colorInterpolationFilters\",\n    colorProfile: 1,\n    \"color-profile\": \"colorProfile\",\n    colorRendering: 1,\n    \"color-rendering\": \"colorRendering\",\n    contentScriptType: 1,\n    contentStyleType: 1,\n    cursor: 0,\n    cx: 0,\n    cy: 0,\n    d: 0,\n    datatype: 0,\n    decelerate: 0,\n    descent: 0,\n    diffuseConstant: 1,\n    direction: 0,\n    display: 0,\n    divisor: 0,\n    dominantBaseline: 1,\n    \"dominant-baseline\": \"dominantBaseline\",\n    dur: 0,\n    dx: 0,\n    dy: 0,\n    edgeMode: 1,\n    elevation: 0,\n    enableBackground: 1,\n    \"enable-background\": \"enableBackground\",\n    end: 0,\n    exponent: 0,\n    externalResourcesRequired: 1,\n    fill: 0,\n    fillOpacity: 1,\n    \"fill-opacity\": \"fillOpacity\",\n    fillRule: 1,\n    \"fill-rule\": \"fillRule\",\n    filter: 0,\n    filterRes: 1,\n    filterUnits: 1,\n    floodOpacity: 1,\n    \"flood-opacity\": \"floodOpacity\",\n    floodColor: 1,\n    \"flood-color\": \"floodColor\",\n    focusable: 0,\n    fontFamily: 1,\n    \"font-family\": \"fontFamily\",\n    fontSize: 1,\n    \"font-size\": \"fontSize\",\n    fontSizeAdjust: 1,\n    \"font-size-adjust\": \"fontSizeAdjust\",\n    fontStretch: 1,\n    \"font-stretch\": \"fontStretch\",\n    fontStyle: 1,\n    \"font-style\": \"fontStyle\",\n    fontVariant: 1,\n    \"font-variant\": \"fontVariant\",\n    fontWeight: 1,\n    \"font-weight\": \"fontWeight\",\n    format: 0,\n    from: 0,\n    fx: 0,\n    fy: 0,\n    g1: 0,\n    g2: 0,\n    glyphName: 1,\n    \"glyph-name\": \"glyphName\",\n    glyphOrientationHorizontal: 1,\n    \"glyph-orientation-horizontal\": \"glyphOrientationHorizontal\",\n    glyphOrientationVertical: 1,\n    \"glyph-orientation-vertical\": \"glyphOrientationVertical\",\n    glyphRef: 1,\n    gradientTransform: 1,\n    gradientUnits: 1,\n    hanging: 0,\n    horizAdvX: 1,\n    \"horiz-adv-x\": \"horizAdvX\",\n    horizOriginX: 1,\n    \"horiz-origin-x\": \"horizOriginX\",\n    ideographic: 0,\n    imageRendering: 1,\n    \"image-rendering\": \"imageRendering\",\n    in2: 0,\n    in: 0,\n    inlist: 0,\n    intercept: 0,\n    k1: 0,\n    k2: 0,\n    k3: 0,\n    k4: 0,\n    k: 0,\n    kernelMatrix: 1,\n    kernelUnitLength: 1,\n    kerning: 0,\n    keyPoints: 1,\n    keySplines: 1,\n    keyTimes: 1,\n    lengthAdjust: 1,\n    letterSpacing: 1,\n    \"letter-spacing\": \"letterSpacing\",\n    lightingColor: 1,\n    \"lighting-color\": \"lightingColor\",\n    limitingConeAngle: 1,\n    local: 0,\n    markerEnd: 1,\n    \"marker-end\": \"markerEnd\",\n    markerHeight: 1,\n    markerMid: 1,\n    \"marker-mid\": \"markerMid\",\n    markerStart: 1,\n    \"marker-start\": \"markerStart\",\n    markerUnits: 1,\n    markerWidth: 1,\n    mask: 0,\n    maskContentUnits: 1,\n    maskUnits: 1,\n    mathematical: 0,\n    mode: 0,\n    numOctaves: 1,\n    offset: 0,\n    opacity: 0,\n    operator: 0,\n    order: 0,\n    orient: 0,\n    orientation: 0,\n    origin: 0,\n    overflow: 0,\n    overlinePosition: 1,\n    \"overline-position\": \"overlinePosition\",\n    overlineThickness: 1,\n    \"overline-thickness\": \"overlineThickness\",\n    paintOrder: 1,\n    \"paint-order\": \"paintOrder\",\n    panose1: 0,\n    \"panose-1\": \"panose1\",\n    pathLength: 1,\n    patternContentUnits: 1,\n    patternTransform: 1,\n    patternUnits: 1,\n    pointerEvents: 1,\n    \"pointer-events\": \"pointerEvents\",\n    points: 0,\n    pointsAtX: 1,\n    pointsAtY: 1,\n    pointsAtZ: 1,\n    prefix: 0,\n    preserveAlpha: 1,\n    preserveAspectRatio: 1,\n    primitiveUnits: 1,\n    property: 0,\n    r: 0,\n    radius: 0,\n    refX: 1,\n    refY: 1,\n    renderingIntent: 1,\n    \"rendering-intent\": \"renderingIntent\",\n    repeatCount: 1,\n    repeatDur: 1,\n    requiredExtensions: 1,\n    requiredFeatures: 1,\n    resource: 0,\n    restart: 0,\n    result: 0,\n    results: 0,\n    rotate: 0,\n    rx: 0,\n    ry: 0,\n    scale: 0,\n    security: 0,\n    seed: 0,\n    shapeRendering: 1,\n    \"shape-rendering\": \"shapeRendering\",\n    slope: 0,\n    spacing: 0,\n    specularConstant: 1,\n    specularExponent: 1,\n    speed: 0,\n    spreadMethod: 1,\n    startOffset: 1,\n    stdDeviation: 1,\n    stemh: 0,\n    stemv: 0,\n    stitchTiles: 1,\n    stopColor: 1,\n    \"stop-color\": \"stopColor\",\n    stopOpacity: 1,\n    \"stop-opacity\": \"stopOpacity\",\n    strikethroughPosition: 1,\n    \"strikethrough-position\": \"strikethroughPosition\",\n    strikethroughThickness: 1,\n    \"strikethrough-thickness\": \"strikethroughThickness\",\n    string: 0,\n    stroke: 0,\n    strokeDasharray: 1,\n    \"stroke-dasharray\": \"strokeDasharray\",\n    strokeDashoffset: 1,\n    \"stroke-dashoffset\": \"strokeDashoffset\",\n    strokeLinecap: 1,\n    \"stroke-linecap\": \"strokeLinecap\",\n    strokeLinejoin: 1,\n    \"stroke-linejoin\": \"strokeLinejoin\",\n    strokeMiterlimit: 1,\n    \"stroke-miterlimit\": \"strokeMiterlimit\",\n    strokeWidth: 1,\n    \"stroke-width\": \"strokeWidth\",\n    strokeOpacity: 1,\n    \"stroke-opacity\": \"strokeOpacity\",\n    suppressContentEditableWarning: 1,\n    suppressHydrationWarning: 1,\n    surfaceScale: 1,\n    systemLanguage: 1,\n    tableValues: 1,\n    targetX: 1,\n    targetY: 1,\n    textAnchor: 1,\n    \"text-anchor\": \"textAnchor\",\n    textDecoration: 1,\n    \"text-decoration\": \"textDecoration\",\n    textLength: 1,\n    textRendering: 1,\n    \"text-rendering\": \"textRendering\",\n    to: 0,\n    transform: 0,\n    typeof: 0,\n    u1: 0,\n    u2: 0,\n    underlinePosition: 1,\n    \"underline-position\": \"underlinePosition\",\n    underlineThickness: 1,\n    \"underline-thickness\": \"underlineThickness\",\n    unicode: 0,\n    unicodeBidi: 1,\n    \"unicode-bidi\": \"unicodeBidi\",\n    unicodeRange: 1,\n    \"unicode-range\": \"unicodeRange\",\n    unitsPerEm: 1,\n    \"units-per-em\": \"unitsPerEm\",\n    unselectable: 0,\n    vAlphabetic: 1,\n    \"v-alphabetic\": \"vAlphabetic\",\n    values: 0,\n    vectorEffect: 1,\n    \"vector-effect\": \"vectorEffect\",\n    version: 0,\n    vertAdvY: 1,\n    \"vert-adv-y\": \"vertAdvY\",\n    vertOriginX: 1,\n    \"vert-origin-x\": \"vertOriginX\",\n    vertOriginY: 1,\n    \"vert-origin-y\": \"vertOriginY\",\n    vHanging: 1,\n    \"v-hanging\": \"vHanging\",\n    vIdeographic: 1,\n    \"v-ideographic\": \"vIdeographic\",\n    viewBox: 1,\n    viewTarget: 1,\n    visibility: 0,\n    vMathematical: 1,\n    \"v-mathematical\": \"vMathematical\",\n    vocab: 0,\n    widths: 0,\n    wordSpacing: 1,\n    \"word-spacing\": \"wordSpacing\",\n    writingMode: 1,\n    \"writing-mode\": \"writingMode\",\n    x1: 0,\n    x2: 0,\n    x: 0,\n    xChannelSelector: 1,\n    xHeight: 1,\n    \"x-height\": \"xHeight\",\n    xlinkActuate: 1,\n    \"xlink:actuate\": \"xlinkActuate\",\n    xlinkArcrole: 1,\n    \"xlink:arcrole\": \"xlinkArcrole\",\n    xlinkHref: 1,\n    \"xlink:href\": \"xlinkHref\",\n    xlinkRole: 1,\n    \"xlink:role\": \"xlinkRole\",\n    xlinkShow: 1,\n    \"xlink:show\": \"xlinkShow\",\n    xlinkTitle: 1,\n    \"xlink:title\": \"xlinkTitle\",\n    xlinkType: 1,\n    \"xlink:type\": \"xlinkType\",\n    xmlBase: 1,\n    \"xml:base\": \"xmlBase\",\n    xmlLang: 1,\n    \"xml:lang\": \"xmlLang\",\n    xmlns: 0,\n    \"xml:space\": \"xmlSpace\",\n    xmlnsXlink: 1,\n    \"xmlns:xlink\": \"xmlnsXlink\",\n    xmlSpace: 1,\n    y1: 0,\n    y2: 0,\n    y: 0,\n    yChannelSelector: 1,\n    z: 0,\n    zoomAndPan: 1\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/react-property/lib/possibleStandardNamesOptimized.js\n");

/***/ })

};
;